
// docker容器
/*
	概述
		docker是一个开源的应用容器引擎，基于Go语言并遵从Apache2.0协议开源。

		docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器
		中，然后发布到任何流行的linux机器上，也可以实现虚拟化。

		容器是完全使用沙箱机制，相互之间不会有任何接口（类似iPhone的app），
		更重要的是容器性能开销极低。

	应用场景
		Web应用的自动化打包和发布。

		自动化测试和持续集成、发布。

		在服务型环境中部署和调整数据库或其他的后台应用。

		从头编译或者扩展现有的OpenShift或CloudFoundry平台来搭建自己的PaaS环境。

	docker的优点
		docker是一个用于开发，交付和运行应用程序的开放平台。docker使您能够将应用
		程序与基础架构分开，从而可以快速交付软件。借助docker，您可以与管理应用程序
		相同的方式来管理基础架构。通过利用docker的方法来快速交付，测试和部署代码，
		您可以大大减少编写代码和在生产环境中运行代码之间的延迟。

		1.快速，一致地交付您的应用程序
			docker允许开发人员使用您提供的应用程序和服务的本地容器在标准化环境中工作，
			从而简化了开发的生命周期。容器非常适合持续集成和持续交付（CI/CD）工作流程，
			请考虑以下示例方案：
				1）您的开发人员在本地编写代码，并使用docker容器与同事共享他们的工作。
				2）他们使用docker将其应用程序推送到测试环境中，并执行自动或手动测试。
				3）当开发人员发现错误时，他们可以在开发环境中对其进行修复，然后将其重
					新部署到测试环境中，以进行测试和验证。
				4）测试完成后，将修补程序推送给生产环境，就像将更新的镜像推送到生产环境
					一样简单。
*/